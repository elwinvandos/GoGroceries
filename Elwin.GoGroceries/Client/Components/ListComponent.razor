@using Elwin.GoGroceries.Contracts;
@using Elwin.GoGroceries.Contracts.DtoBases;
@typeparam TItem where TItem : NamedDtoBase

<ul>
    @if (Items is not null)
    {
        @foreach (var item in Items)
        {
            <ListItemComponent Item="item" OnClickListItem="ClickListItem" OnDelete="Delete"></ListItemComponent>
            <MudDivider />
        }
        @if (!HideAdd)
        {
            <MudButton Variant="Variant.Filled" Color="Color.Tertiary" StartIcon="@Icons.Material.Filled.Add" Size="Size.Small" Style="margin: 0.5rem;" @onclick="() => AddNew()">
                Add
            </MudButton>
        }
    }
</ul>

@code {
    [Parameter]
    public IEnumerable<TItem> Items { get; set; } = null!;

    [Parameter]
    public EventCallback<Guid> OnClickListItem { get; set; }

    [Parameter]
    public EventCallback<Guid> OnDelete { get; set; }

    [Parameter]
    public EventCallback<Guid> OnAdd { get; set; }

    [Parameter]
    public bool HideAdd { get; set; } = false;

    protected async Task Delete(Guid id)
    {
        await OnDelete.InvokeAsync(id);
    }

    protected async Task ClickListItem(Guid id)
    {
        await OnClickListItem.InvokeAsync(id);
    }

    protected async Task AddNew()
    {
        await OnAdd.InvokeAsync();
    }
}
