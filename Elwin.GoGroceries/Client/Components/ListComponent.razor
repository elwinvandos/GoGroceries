@using Elwin.GoGroceries.Contracts;
@using Elwin.GoGroceries.Contracts.DtoBases;
@typeparam TItem where TItem : NamedDtoBase

<ul>
    @if (Items is not null)
    {
        @foreach (var item in Items)
        {
            <ListItemComponent Item="item" ShowEdit="ShowEdit" OnEdit="() => OnEdit.InvokeAsync(item.Id)" OnClickListItem="() => OnClickListItem.InvokeAsync(item.Id)" OnDelete="() => OnDelete.InvokeAsync(item.Id)"></ListItemComponent>
            <MudDivider />
        }
        @if (!HideAdd)
        {
            <MudButton Variant="Variant.Filled" Color="Color.Tertiary" StartIcon="@Icons.Material.Filled.Add" Size="Size.Small" Style="margin: 0.5rem;" @onclick="() => OnAdd.InvokeAsync()">
                Add
            </MudButton>
        }
    }
</ul>

@code {
    [Parameter]
    public IEnumerable<TItem> Items { get; set; } = null!;

    [Parameter]
    public bool ShowEdit { get; set; } = false;

    [Parameter]
    public EventCallback<Guid> OnClickListItem { get; set; }

    [Parameter]
    public EventCallback<Guid> OnEdit { get; set; }

    [Parameter]
    public EventCallback<Guid> OnDelete { get; set; }

    [Parameter]
    public EventCallback OnAdd { get; set; }

    [Parameter]
    public bool HideAdd { get; set; } = false;
}
