@using Elwin.GoGroceries.Contracts.DtoBases;

@typeparam TItem where TItem : WeightedDtoBase

<MudAutocomplete 
    T="TItem" 
    Label="@Label" 
    @bind-Value="selectedValue" 
    SearchFunc="@Search" 
    Required="RequiredError is not null ? true : false" 
    RequiredError="@RequiredError"
    ResetValueOnEmptyText="true" 
    CoerceValue="true" 
    CoerceText="true" 
    ToStringFunc="@(i => i.Name)" />

@code {
    [Parameter]
    public IEnumerable<TItem> Items { get; set; } = null!;

    [Parameter]
    public string Label { get; set; } = null!;

    [Parameter]
    public TItem? SelectedValue { get; set; }

    [Parameter]
    public EventCallback<TItem> SelectedValueChanged { get; set; }

    [Parameter]
    public string? RequiredError { get; set; }

    private TItem selectedValue
    {
        get => SelectedValue;
        set => SelectedValueChanged.InvokeAsync(value);
    }

    protected override async Task OnParametersSetAsync()
    {
        Items = Items.OrderBy(i => i.UserWeight);
    }

    private async Task<IEnumerable<TItem>> Search(string value)
    {
        if (string.IsNullOrEmpty(value)) return Items;

        return Items.Where(i => i.Name.Contains(value, StringComparison.InvariantCultureIgnoreCase));
    }
}
