@using Elwin.GoGroceries.Contracts;
@using Elwin.GoGroceries.Contracts.Product;
@inject NavigationManager Navigation

<ListItemComponent Item="Product" ShowEdit="true" OnEdit="() => OnEdit.InvokeAsync(Product.Id)" OnDelete="() => OnDelete.InvokeAsync(Product.Id)" OnClickListItem="() => OnClickListItem.InvokeAsync(Product.Id)">
    <div style="display: flex; justify-content: space-between">
        <div style="width: 25%">
            @if (Product.Quantity is not null)
            {
                <MudChip Variant="Variant.Text" Size="Size.Small" Color="Color.Tertiary">@string.Concat("x", Product.Quantity)</MudChip>
            }
        </div>
        <div style="width: 45%">
            @if (Product.Measurement is not null)
            {
                <MudChip Variant="Variant.Text" Size="Size.Small" Color="Color.Info">@Product.Measurement</MudChip>
            }
        </div>
        <div style="width: 30%">
            @if (Product.MeasurementQuantity is not null)
            {
                <MudChip Variant="Variant.Text" Size="Size.Small" Color="Color.Info">@Product.MeasurementQuantity</MudChip>
            }
        </div>
    </div>
</ListItemComponent>
<MudDivider />

@code {
    [Parameter]
    public ProductDto Product { get; set; }

    [Parameter]
    public EventCallback<Guid> OnEdit { get; set; }

    [Parameter]
    public EventCallback<Guid> OnDelete { get; set; }

    [Parameter]
    public EventCallback<Guid> OnClickListItem { get; set; }
}
 