@using Elwin.GoGroceries.Client.Components
@using Elwin.GoGroceries.Contracts;
@using Elwin.GoGroceries.Client.Helpers;
@inject HttpClient Http
@inject NavigationManager Navigation
@inject IDialogService DialogService
@page "/templates"

<MudPaper Width="100%">
    <ListComponent Items="templates" OnAdd="AddNew" OnDelete="Delete" OnClickListItem="GoToTemplate"></ListComponent>
</MudPaper>

@code {
    private ICollection<TemplateDto>? templates { get; set; } = new List<TemplateDto>();

    protected override async Task OnInitializedAsync()
    {
        var res = await Http.GetAsync("Templates");

        templates = await HttpResultHelper.Process(res, () => res.Content.ReadFromJsonAsync<ICollection<TemplateDto>>());
        StateHasChanged();
    }

    protected async Task GoToTemplate(Guid id)
    {
        Navigation.NavigateTo($"/template/{id}");
    }

    protected void AddNew() => Navigation.NavigateTo($"/templates/add");

    protected async Task Delete(Guid id)
    {
        var dialogRes = await DialogService.ShowMessageBox("Warning", "Do you want to delete this template?", yesText: "Delete", cancelText: "Cancel");

        if (dialogRes is true)
        {
            var res = await Http.DeleteAsync($"Templates/{id}");

            if (res.IsSuccessStatusCode)
            {
                templates?.Remove(templates.Single(l => l.Id == id));
                StateHasChanged();
            }
        }
    }
}
