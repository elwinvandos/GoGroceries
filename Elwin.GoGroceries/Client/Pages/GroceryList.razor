@using Elwin.GoGroceries.Client.Helpers;
@using Elwin.GoGroceries.Contracts;
@using Elwin.GoGroceries.Client.Components;
@inject HttpClient Http
@inject NavigationManager Navigation
@page "/grocerylist/{id:guid}"

<MudPaper Width="100%">
    <ListComponent Items="groceryList?.GroceryItems" OnAdd="AddNew" OnDelete="Delete"></ListComponent>
</MudPaper>

@code {
    [Parameter]
    public Guid Id { get; set; }

    private GroceryListDto? groceryList { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var res = await Http.GetAsync($"GroceryLists/{Id}");

        groceryList = await HttpResultHelper.Process(res, () => res.Content.ReadFromJsonAsync<GroceryListDto>());
    }

    protected void AddNew()
    {
        Navigation.NavigateTo($"/groceryList/{Id}/add");
    }

    protected async Task Delete(Guid itemId)
    {
        var res = await Http.DeleteAsync($"GroceryLists/{Id}/{itemId}");

        if (res.IsSuccessStatusCode)
        {
            groceryList?.GroceryItems?.Remove(groceryList.GroceryItems.Single(i => i.Id == itemId));
            StateHasChanged();
        }
    }
}
